{"version":3,"sources":["AddProduct/AddProduct.js","ShowProducts/ShowProduct.js","ShowProducts/RetrieveProducts.js","Main/ProductMain.js","App.js","reportWebVitals.js","index.js"],"names":["AddProduct","classes","makeStyles","theme","root","flexGrow","useStyles","enqueueSnackbar","useSnackbar","useState","currentProductName","setProductName","currentProductPrice","setProductPrice","currentProductQuantity","setProductQuantity","newProduct","productName","productPrice","productQuantity","postProduct","a","axios","post","response","variant","console","log","data","toString","autoHideDuration","onSubmit","event","preventDefault","className","Grid","container","spacing","item","xs","sm","type","value","onChange","target","ShowProduct","props","div","margin","updateIcon","padding","deleteIcon","updateProduct","deleteProduct","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","style","textAlign","TableBody","productList","length","map","row","onClick","productID","displayProduct","RetrieveProducts","products","getProducts","retrieveProduct","getAllProducts","useEffect","get","allProducts","content","ProductMain","currentNavigation","nextNavigation","paper","fontSize","fontFamily","fontWeight","background","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","maxSnack","preventDuplicate","anchorOrigin","vertical","horizontal","TransitionComponent","Fade","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b863ee5f.chunk.js","sourcesContent":["import React, {useState} from \"react\";\r\nimport {Grid, makeStyles} from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport {useSnackbar} from \"notistack\";\r\nimport \"./AddProduct.css\"\r\n\r\nconst AddProduct = () => {\r\n        const useStyles = makeStyles((theme) => ({\r\n            root: {\r\n                flexGrow: 1,\r\n            },\r\n        }));\r\n\r\n        const classes = useStyles();\r\n\r\n        const baseURL = \"http://localhost:8081/api/addNewProduct\";\r\n\r\n        const {enqueueSnackbar} = useSnackbar();\r\n        const [currentProductName, setProductName] = useState(\"\");\r\n        const [currentProductPrice, setProductPrice] = useState(\"\");\r\n        const [currentProductQuantity, setProductQuantity] = useState(\"\");\r\n\r\n        const newProduct = {\r\n            productName: currentProductName,\r\n            productPrice: currentProductPrice,\r\n            productQuantity: currentProductQuantity,\r\n        }\r\n\r\n        const addProductHandler = (event) => {\r\n            event.preventDefault();\r\n            if (!currentProductName) {\r\n                enqueueSnackbar(\"Product name cannot be empty\", {\r\n                    variant: 'error', autoHideDuration : \"100\"\r\n                });\r\n            } else if (!currentProductPrice) {\r\n                enqueueSnackbar(\"Product price cannot be empty\", {\r\n                    variant: 'error', autoHideDuration : \"100\"\r\n                });\r\n            } else if (!currentProductQuantity) {\r\n                enqueueSnackbar(\"Product quantity cannot be empty\", {\r\n                    variant: 'error', autoHideDuration : \"100\"\r\n                });\r\n            } else {\r\n                postProduct();\r\n            }\r\n            console.log(\"Submit button clicked.\");\r\n            console.log(newProduct);\r\n        }\r\n\r\n        const postProduct = async () => {\r\n            try {\r\n                const response = await axios.post(baseURL, newProduct);\r\n                enqueueSnackbar(\"Product post successfully.\", {\r\n                    variant: 'success',\r\n                });\r\n                setProductName(\"\");\r\n                setProductQuantity(\"\");\r\n                setProductPrice(\"\");\r\n                console.log(response.data);\r\n            } catch (errorResponse) {\r\n                enqueueSnackbar(errorResponse.toString(), {\r\n                    variant: 'error',autoHideDuration : \"100\"\r\n                });\r\n                console.log(errorResponse);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <form onSubmit={addProductHandler}>\r\n                <div className={classes.root}>\r\n                    <div className=\"container\">\r\n                        <Grid container spacing={1}>\r\n                            <Grid item xs={12} sm={6}>\r\n                                <div className=\"productInput\">\r\n                                    <label>Product name :</label>\r\n                                    <input type=\"text\" value={currentProductName}\r\n                                           onChange={(event) => {\r\n                                               setProductName(event.target.value);\r\n                                               console.log(event.target.value);\r\n                                           }}/>\r\n                                </div>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <div className=\"productInput\">\r\n                                    <label>Product price (RM):</label>\r\n                                    <input type=\"number\" value={currentProductPrice}\r\n                                           onChange={(event) => {\r\n                                               setProductPrice(event.target.value);\r\n                                               console.log(event.target.value);\r\n                                           }}/>\r\n                                </div>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12} sm={6}>\r\n                                <div className=\"productInput\">\r\n                                    <label>Product quantity:</label>\r\n                                    <input type=\"number\" value={currentProductQuantity}\r\n                                           onChange={(event) => {\r\n                                               setProductQuantity(event.target.value);\r\n                                               console.log(event.target.value);\r\n                                           }}/>\r\n                                </div>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        <div className=\"submitBTN\">\r\n                            <button type=\"submit\">Add product</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        );\r\n    };\r\n\r\nexport default AddProduct;\r\n","import React from \"react\";\r\nimport \"./ShowProducts.css\"\r\nimport {\r\n    makeStyles,\r\n    Paper,\r\n    Table,\r\n    TableBody,\r\n    TableCell,\r\n    TableContainer,\r\n    TableHead,\r\n    TableRow,\r\n} from \"@material-ui/core\";\r\nimport UpdateIcon from '@material-ui/icons/Update';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nconst ShowProduct = (props) => {\r\n    const useStyles = makeStyles({\r\n        div: {\r\n            margin: \"10px 10px\"\r\n        },\r\n        updateIcon:{\r\n            padding:\"0 10px\"\r\n        },\r\n        deleteIcon:{\r\n            padding:\"0 10px\"\r\n        }\r\n    });\r\n\r\n    const classes = useStyles();\r\n\r\n    const updateProduct=()=>{\r\n        console.log(\"Update product button is clicked.\")\r\n    };\r\n\r\n    const deleteProduct=()=>{\r\n        console.log(\"Delete product button is clicked\");\r\n    }\r\n\r\n    const displayProduct = (props) => {\r\n        if (props.productList.length > 0) {\r\n            console.log(props.productList.length);\r\n            return (\r\n                props.productList.map((row) => {\r\n                    return (\r\n                        <TableRow key={row.productID} className=\"tableBodyRow\">\r\n                            <TableCell><label>{row.productName}</label></TableCell>\r\n                            <TableCell><label>{row.productPrice}</label></TableCell>\r\n                            <TableCell><label>{row.productQuantity}</label></TableCell>\r\n                            <TableCell style={{textAlign:\"center\"}}>\r\n                                    <UpdateIcon className={classes.updateIcon} onClick={updateProduct}/>\r\n                                    <DeleteForeverIcon className={classes.deleteIcon} onClick={deleteProduct}/>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    )\r\n                })\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classes.div}>\r\n            <TableContainer component={Paper}>\r\n                <Table aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow className=\"tableHeadRow\">\r\n                            <TableCell><label>Product name</label></TableCell>\r\n                            <TableCell><label>Product price (RM)</label></TableCell>\r\n                            <TableCell><label>Product quantity</label></TableCell>\r\n                            <TableCell style={{textAlign:\"center\"}}><label>Action</label></TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n\r\n                    <TableBody>\r\n                        {displayProduct(props)}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <h6>Testing- Currently under maintenance</h6>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShowProduct;\r\n","import React, {useEffect, useState} from \"react\";\r\nimport axios from \"axios\";\r\nimport ShowProduct from \"./ShowProduct\";\r\nimport {useSnackbar} from \"notistack\";\r\n\r\nconst RetrieveProducts = () =>{\r\n    const [products, getProducts] = useState(\"\");\r\n    const {enqueueSnackbar} = useSnackbar();\r\n    let [retrieveProduct, getAllProducts] = useState({});\r\n\r\n    const baseURL=\"http://localhost:8081/api/getAllProducts\";\r\n\r\n    useEffect(() => {\r\n        getAllProducts();\r\n    },[retrieveProduct]);\r\n\r\n     getAllProducts = async () => {\r\n        try {\r\n            const response = await axios.get(baseURL);\r\n            const allProducts = response.data.content;\r\n            if (allProducts.length > 0) {\r\n                getProducts(allProducts);\r\n                enqueueSnackbar(\"Product load successfully.\", {\r\n                    variant: 'success', autoHideDuration : \"100\"\r\n                });\r\n            } else {\r\n                enqueueSnackbar(\"Product not found.\", {\r\n                    variant: 'error', autoHideDuration : \"100\"\r\n                });\r\n                console.log(\"Product not found.\")\r\n            }\r\n        } catch (errorResponse) {\r\n            console.log(errorResponse);\r\n        }\r\n    };\r\n\r\n    return(\r\n        <ShowProduct productList={products}/>\r\n    )\r\n};\r\n\r\nexport default RetrieveProducts;\r\n","import React, {useState} from \"react\";\r\nimport AddProduct from \"../AddProduct/AddProduct\";\r\nimport {Grid, makeStyles, Paper} from \"@material-ui/core\";\r\nimport RetrieveProducts from \"../ShowProducts/RetrieveProducts\";\r\n\r\nconst ProductMain = () => {\r\n\r\n    const [currentNavigation, nextNavigation] = useState(false);\r\n\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            flexGrow: 1,\r\n        },\r\n        paper:{\r\n            fontSize: \"1.2rem\",\r\n            fontFamily:\"Arial, serif\",\r\n            textAlign:\"center\",\r\n            fontWeight:\"bold\",\r\n            padding:\"1rem\",\r\n            margin:\"0.5rem\",\r\n            background:\"radial-gradient(circle, rgba(238,174,202,1) 0%, rgba(148,187,233,1) 100%);\"\r\n        }\r\n    }));\r\n\r\n    const addProduct = () => {\r\n        nextNavigation(false);\r\n        console.log(\"Add product\");\r\n    };\r\n\r\n    const viewProduct = () => {\r\n        nextNavigation(true);\r\n        console.log(\"View product\");\r\n    };\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={12} sm={6} onClick={addProduct}>\r\n                    <Paper className={classes.paper}>Add Products</Paper>\r\n                </Grid>\r\n\r\n                <Grid item xs={12} sm={6} onClick={viewProduct}>\r\n                    <Paper className={classes.paper}>View Products</Paper>\r\n                </Grid>\r\n\r\n            </Grid>\r\n\r\n            <div>\r\n                {!currentNavigation && <AddProduct/>}\r\n            </div>\r\n\r\n            <div>\r\n                {currentNavigation && (<RetrieveProducts/>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ProductMain;\r\n","import ProductMain from \"./Main/ProductMain\"\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n      <div>\r\n        <ProductMain/>\r\n      </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport {SnackbarProvider} from 'notistack';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n    <SnackbarProvider maxSnack={3}  preventDuplicate anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n    }} TransitionComponent={Fade}>\r\n        <React.StrictMode>\r\n            <App/>\r\n        </React.StrictMode>\r\n    </SnackbarProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}